@{
    ViewData["Title"] = "ProductSales";
    Layout = "_AdminLayout";
}


<div x-data="initData()" x-init="getData()" class="container">
    <div class="row align-items-center mt-4">
        <div class="col">
            <h1 class="page-header">Product Sales Report</h1>
        </div>
        <div class="col-sm-6">
            <form x-on:submit.prevent="finByDate">
                <div class="d-flex">
                    <input x-ref="fromDate" :value="dates.from" class="form-control datepicker" placeholder="Form Date" type="text">
                    <input x-ref="toDate" :value="dates.to" class="form-control datepicker mx-3" placeholder="To Date" type="text">
                    <div>
                        <button class="btn btn-custom-bg btn-md my-0" type="submit">Find</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card card-body mt-4">
        <table class="table table-sm">
            <thead>
                <tr>
                    <th>Product</th>
                    <th class="text-right">Square Inch</th>
                </tr>
            </thead>
            <tbody>
                <template x-for="(item, i) in data" :key="item.ProductId">
                    <tr>
                        <td x-text="item.ProductName"></td>
                        <td class="text-right" x-text="item.SoldQuantity"></td>
                    </tr>
                </template>
            </tbody>
        </table>
    </div>
</div>



@section Scripts {
    <script>
        $(function() {
            $('.datepicker').pickadate();
        });


        //alpine js code
        function initData() {
            return {
                loading: false,
                data: [],
                dates: {
                    from:moment().format('D MMMM, YYYY'),
                    to:moment().endOf('month').format('D MMMM, YYYY')
                },

                //data table get data
                async getData(from=this.dates.from, to=this.dates.to) {
                    try {
                        const response = await fetch(`/report/GetProductSales?from=${from}&to=${to}`);
                        const responseData = await response.json();

                        this.data = responseData;

                    } catch (error) {
                        console.log(error);
                    }
                },

                //bill find by date
                finByDate() {
                    const from = this.$refs.fromDate.value;
                    const to = this.$refs.toDate.value;

                    this.getData(from,to);
                }
            };
        }
    </script>
}

