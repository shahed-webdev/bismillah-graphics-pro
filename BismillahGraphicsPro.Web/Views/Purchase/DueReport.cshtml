@{
    ViewData["Title"] = "Purchase";
    Layout = "_AdminLayout";
}


<div class="d-flex justify-content-between align-items-center my-3">
    <h1 class="page-header">Purchase Due Report</h1>
    <h5 class="font-weight-bold mb-0">Total Due: ৳1454260</h5>
</div>

<div class="card card-body mt-4">
    <table id="data-table" class="table table-sm">
        <thead>
            <tr>
                <th>Party Name</th>
                <th>Sales</th>
                <th>Received</th>
                <th>Discount</th>
                <th>Due</th>
            </tr>
        </thead>
    </table>
</div>



@section Scripts {
<script>
    $(function() {
        dataTable.filter.push({ Field: "SupplierDue", Value: 0, Operand: dataTable.operand.GreaterThan });
        dataTable.getData();
    });

    //data table
    const dataTable = {
        table: null,
        filter: [],
        init: function() {
            dataTable.table = $("#data-table").DataTable({
                processing: true,
                serverSide: true,
                ajax: {
                    url: "/Purchase/GetSupplierData",
                    type: "POST",
                    data: function(d) {
                        d.filters = dataTable.filter;
                    }
                },
               columns:
                [
                    {
                        data: "SupplierCompanyName",
                        "render": function(data, type, row) {
                            return `<p class="font-weight-bold mb-0">${data}</p><span>${row.SupplierName}</span>`
                        }
                    },

                    { data: "TotalAmount", "render": function(data) { return `৳${data}` } },
                    { data: "SupplierPaid", "render": function(data) { return `৳${data}` } },
                    { data: "TotalDiscount", "render": function(data) { return `৳${data}` } },
                    {
                        data: "SupplierDue",
                        "render": function(data, type, row) {
                            return data?`<a href="/Purchase/PayDueMultiple/${row.SupplierId}" class="blue-text">৳${data}</a>`:data
                        }
                    },
                ],
                columnDefs: [
                    //{ 'searchable': false, 'targets': [7, 8] },
                    //{ 'sortable': false, 'targets': [7, 8] },
                    //{ 'className': "text-center", "targets": [2] },
                    { 'className': "text-right", "targets": [1,2,3, 4] }
                ]
            });
        },
        operand: {
            Equal: 0,
            NotEqual: 1,
            GreaterThan: 2,
            LessThan: 3,
            GreaterThanOrEqual: 4,
            LessThanOrEqual: 5,
            Contains: 6,
            StartsWith: 7,
            EndsWith: 8
        },
        getData: function() {
            dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
        }
    }

     //alpine js code
        function initData() {
            return {
                totalDue: 0,

                async getTotalDue() {
                    try {
                        const response = await fetch("/purchase/GetSupplierDue");
                        const responseData = await response.json();
                        this.totalDue = responseData.Data;

                    } catch (error) {
                        console.log(error);
                    }
                }
            };
        }
</script>
}
