@{
    ViewData["Title"] = "Withdraw";
    Layout = "_AdminLayout";
}

<div x-data="initData()" class="mx-3">
    <div class="d-flex justify-content-between align-items-center my-3">
        <div>
            <h4 class="page-header">Withdraw <small>@Model.AccountName</small></h4>
            <a href="/account"><i class="fal fa-long-arrow-left mr-1"></i>Back to Account</a>
        </div>

        <h5 class="font-weight-bold">Balance ৳@Model.Balance</h5>
    </div>

    <form x-on:submit.prevent="insertData">
        <div class="row">
            <div class="col-xl-3">
                <div class="form-group">
                    <label for="inputWithdrawAmount">Amount</label>
                    <input type="number" step="0.01" min="0" max="@Model.Balance" x-model="formData.WithdrawAmount" class="form-control" required>
                </div>
            </div>
            <div class="col-xl-3">
                <div class="form-group">
                    <label for="inputDescription">Description</label>
                    <input id="inputDescription" type="text" x-model="formData.Description" class="form-control">
                </div>
            </div>
            <div class="col-xl-3">
                <div x-init="dateInit()" class="form-group">
                    <label>Withdraw Date</label>
                    <input x-model="formData.WithdrawDate" type="text" class="form-control datepicker" required>
                </div>
            </div>
            <div class="col-xl-3">
                <div class="form-group pt-4">
                    <input type="submit" value="Withdraw" class="btn btn-custom-bg btn-md"/>
                </div>
            </div>
        </div>
    </form>

    <div class="card card-body">
        <table id="table-data" class="table">
            <thead>
            <tr>
                <th>
                    <strong>Amount</strong>
                </th>
                <th>
                    <strong>Description</strong>
                </th>
                <th>
                    <strong>Date</strong>
                </th>
            </tr>
            </thead>
        </table>
    </div>
</div>


@section Scripts {
    <script>
        $(function() {
            dataTable.getData();
        });

        //data table
        const dataTable = {
            table: null,
            filter: null,
            init: function() {
                dataTable.table = $("#table-data").DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: "/Account/GetWithdrawData",
                        type: "POST",
                        data: function(d) {
                            d.filters = dataTable.filter;
                        }
                    },
                    columns:
                    [
                        { data: "WithdrawAmount", "render": dataTable.addSign },
                        { data: "Description" },
                        {
                            data: "WithdrawDate",
                            "render": function(data) { return moment(data).format('DD MMM YYYY') }
                        }
                    ],
                    columnDefs: [
                        { 'className': "text-center", "targets": [2] }
                        //{ 'className': "text-left", "targets": [1] }
                    ]
                });
            },
            operand: {
                Equal: 0,
                NotEqual: 1,
                GreaterThan: 2,
                LessThan: 3,
                GreaterThanOrEqual: 4,
                LessThanOrEqual: 5,
                Contains: 6,
                StartsWith: 7,
                EndsWith: 8
            },
            getData: function() {
                dataTable.filter = [];
                dataTable.filter.push({ Field: "AccountId", Value: '@Model.AccountId', Operand: dataTable.operand.Equal });
                dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
            },
            addSign: function(data) { return `${data}/-` }
        };

        //alpine js code
        function initData() {
            return {
                loading: false,
                data: [],
                formData: {},

                //date function init
                dateInit() {
                    this.formData.DepositDate = moment(new Date()).format("D, MMM YYYY");

                    $('.datepicker').pickadate({
                        onSet: context => {
                            this.formData.DepositDate = moment(context.select).format("D, MMM YYYY");
                        }
                    })
                },


                //insert data
                async insertData() {
                    this.loading = true;

                    try {
                        this.formData.AccountId = @Model.AccountId;
                        const model = { ...this.formData, WithdrawDate: new Date(this.formData.WithdrawDate) };

                        const options = {
                            method: 'POST',
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify(model)
                        };

                        const response = await fetch("/Account/PostWithdraw", options);
                        const responseData = await response.json();

                        if (responseData.IsSuccess) {
                            this.formData = {};
                            location.href = "account";
                        }

                        $.notify(responseData.Message, responseData.IsSuccess ? "success" : "error");
                        this.loading = false;

                    } catch (error) {
                        console.log(error);
                        this.loading = false;
                    }
                }
            };
        }
    </script>
}