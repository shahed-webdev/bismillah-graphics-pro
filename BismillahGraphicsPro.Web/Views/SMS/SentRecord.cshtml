@{
    ViewData["Title"] = "Sent Record";
    Layout = "_AdminLayout";
}



<div x-data="initData()" x-init="getTableData()" class="row align-items-center my-3">
    <div class="col">
        <h1 class="page-header">Sent Record: <span x-text="totalSent"></span></h1>
    </div>
    <div class="col-sm-6">
        <form x-on:submit.prevent="finByDate">
            <div class="d-flex">
                <input x-ref="fromDate" :value="defaultDates.from" class="form-control datepicker" placeholder="Form Date" type="text">
                <input x-ref="toDate" :value="defaultDates.to" class="form-control datepicker mx-3" placeholder="To Date" type="text">
                <div>
                    <button class="btn btn-custom-bg btn-md my-0" type="submit">Find</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="card card-body">
    <table id="data-table" class="table table-bordered table-sm text-center">
        <thead>
            <tr>
                <th><strong>Phone Number</strong></th>
                <th><strong>Text SMS</strong></th>
                <th><strong>Text Count</strong></th>
                <th><strong>SMS Count</strong></th>
                <th><strong>Date</strong></th>
            </tr>
        </thead>
    </table>
</div>


@section scripts{
    <script>
        $(function() {
            dataTable.getData();
            $('.datepicker').pickadate();
        });

        const dataTable = {
            table: null,
            filter: [],
            init: function() {
                dataTable.table = $("#data-table").DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: "/SMS/SentRecordData",
                        type: "POST",
                        data: function(d) {
                            d.filters = dataTable.filter;
                        }
                    },
                    columns:
                        [
                            { data: "PhoneNumber" },
                            { data: "TextSms" },
                            { data: "TextCount" },
                            { data: "SmsCount" },
                            { data: "SendDate", "render": function(data) { return moment(data).format('D MMM YYYY') } }
                        ],
                    columnDefs: [
                        { 'searchable': false, 'targets': [0, 1, 2, 3, 4] }
                    ]
                });
            },
            operand: {
                Equal: 0,
                NotEqual: 1,
                GreaterThan: 2,
                LessThan: 3,
                GreaterThanOrEqual: 4,
                LessThanOrEqual: 5,
                Contains: 6,
                StartsWith: 7,
                EndsWith: 8
            },
            getData: function() {
                dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
            }
        }

        //alpine js code
        function initData() {
            return {
                loading: false,
                totalSent: 0,
                defaultDates: {
                    from: moment().startOf('month').format('D MMMM, YYYY'),
                    to: moment().endOf('month').format('D MMMM, YYYY')
                },

                //get get Total Sent SMS
                async getTotalSentSMS(from, to) {
                    try {
                        const response = await fetch(`/SMS/GetSentTotal?from=${from}&to=${to}`);
                        const responseData = await response.json();
                        this.totalSent = responseData.Data;

                    } catch (error) {
                        console.log(error);
                    }
                },


                //data table get data
                getTableData(from = this.defaultDates.from, to = this.defaultDates.to) {
                    const filter = [
                        { Field: "SendDate", Value: from?from: "1970-1-1", Operand: dataTable.operand.GreaterThanOrEqual },
                        { Field: "SendDate", Value: to?to:"3000-1-1", Operand: dataTable.operand.LessThanOrEqual }
                    ]

                    dataTable.filter = filter;
                    dataTable.getData();


                    this.getTotalSentSMS(from, to);
                },


                //bill find by date
                finByDate() {
                    const from = this.$refs.fromDate.value;
                    const to = this.$refs.toDate.value;

                    this.getTableData(from, to);
                }
            };
        }
    </script>
}


