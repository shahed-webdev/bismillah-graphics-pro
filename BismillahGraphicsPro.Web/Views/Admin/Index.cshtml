@model DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
    Layout = "_AdminLayout";
}

<div class="m-0 m-sm-4">
    <div class="container-fluid">
        <section class="mb-4">
            <div class="row">
                <div class="col">
                    <h3 class="mb-4">Dashboard</h3>
                </div>
                <div class="col-md-4 text-right">
                    @Html.DropDownList("selectYear", new SelectList(ViewBag.yearDropdown,"value","label",@DateTime.Now.Year), new { @class = "mdb-select" })
                </div>
            </div>
        </section>

        <section class="mb-5 pb-4">
            <div class="row">
                <div class="col-xl-3 col-md-6 mb-xl-0 mb-4">
                    <div class="card card-cascade cascading-admin-card">
                        <div class="admin-up">
                            <i class="far fa-money-bill-alt primary-color z-depth-2"></i>
                            <div class="data">
                                <h6 class="text-uppercase mt-3 mb-0 font-weight-bold text-black-50">Sales</h6>
                                <p class="mb-2"><span class="current-year"></span></p>
                                <h5 class="font-weight-bold dark-grey-text mb-3">৳@Model.SaleYearly.ToString("N")</h5>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-xl-3 col-md-6 mb-xl-0 mb-4">
                    <div class="card card-cascade cascading-admin-card">
                        <div class="admin-up">
                            <i class="fas fa-chart-bar pink darken-1 z-depth-2"></i>
                            <div class="data">
                                <h6 class="text-uppercase mt-3 mb-0 font-weight-bold text-black-50">Expense</h6>
                                <p class="mb-2"><span class="current-year"></span></p>
                                <h5 class="font-weight-bold dark-grey-text mb-3">৳@Model.ExpenseYearly.ToString("N")</h5>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-xl-3 col-md-6 mb-md-0 mb-4">
                    <div class="card card-cascade cascading-admin-card">
                        <div class="admin-up">
                            <i class="fas fa-chart-pie purple darken-3 z-depth-2"></i>
                            <div class="data">
                                <h6 class="text-uppercase mt-3 mb-0 font-weight-bold text-black-50">Net</h6>
                                <p class="mb-2"><span class="current-year"></span></p>
                                <h5 class="font-weight-bold @(Model.NetYearly >= 0 ? "dark-grey-text" : "red-text") mb-3">৳@Model.NetYearly.ToString("N")</h5>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-xl-3 col-md-6 mb-0">
                    <div class="card card-cascade cascading-admin-card">
                        <div class="admin-up">
                            <i class="fas fa-chart-line special-color-dark z-depth-2"></i>
                            <div class="data">
                                <h6 class="text-uppercase mt-3 mb-0 font-weight-bold text-black-50">Total Due</h6>
                                <p class="mb-2">All Years</p>
                                <h5 class="font-weight-bold dark-grey-text mb-3">৳@Model.TotalDue.ToString("N")</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section class="mb-5">
            <div class="card card-cascade narrower">
                <section>
                    <div class="row">
                        <div class="col-xl-5 col-lg-12 mr-0 mb-5 pb-2">
                            <div class="view view-cascade gradient-card-header purple-gradient">
                                <h2 class="h2-responsive mb-0 font-weight-500">Vendor</h2>
                            </div>

                            <div class="card-body card-body-cascade pb-0">
                                <table id="data-table" class="table table-sm">
                                    <thead>
                                    <tr>
                                        <th class="font-weight-bold dark-grey-text text-left"><strong>Vendor</strong></th>
                                        <th class="font-weight-bold dark-grey-text text-right"><strong>Paid</strong></th>
                                        <th class="font-weight-bold dark-grey-text text-right"><strong>Due</strong></th>
                                    </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>

                        <div class="col-xl-7 col-lg-12 mb-4 pb-2">
                            <div class="view view-cascade gradient-card-header purple-gradient">
                                <canvas id="lineChart"></canvas>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </section>
    </div>
</div>


@section scripts{
    <script>
        // select Init
        $(function() {
            dataTable.filter.push({ Field: "VendorDue", Value: 0, Operand: dataTable.operand.GreaterThan });
            dataTable.getData();


            $('.mdb-select').materialSelect();
            $(".current-year").text(`YEAR: ${$("#selectYear").val()}`);
        });

        //year selected value
        $("#selectYear").change(function() {
            const year = $(this).children("option:selected").val();
            location.href = `/admin/index/${year}`;
        });

        //initial chart value
        var data = JSON.parse('@Html.Raw(Json.Serialize(Model.MonthlyReports))');
        var months = [];
        var income = [];
        var expense = [];

        data.forEach(function(item, i) {
            months.push(item.Month);
            income.push(item.Income);
            expense.push(item.Expense);
        });

        //line chart
        var ctxL = document.getElementById("lineChart").getContext('2d');
        var myLineChart = new Chart(ctxL, {
            type: 'line',
            data: {
                labels: months,
                datasets: [
                    {
                        label: "INCOME",
                        fillColor: "#fff",
                        borderColor: 'rgba(205, 220, 57, 0.7)',
                        data: income,
                        borderWidth: 3
                    },
                    {
                        label: "EXPENSE",
                        fillColor: "#fff",
                        borderColor: 'rgba(244, 67, 54, 0.7)',
                        data: expense,
                        borderWidth: 3
                    }
                ]
            },
            options: {
                legend: { labels: { fontColor: "#fff" } },
                scales: {
                    xAxes: [
                        {
                            gridLines: { display: true, color: "rgba(255,255,255,.25)" },
                            ticks: { fontColor: "#fff" }
                        }
                    ],
                    yAxes: [
                        {
                            display: true,
                            gridLines: { display: true, color: "rgba(255,255,255,.25)" },
                            ticks: { fontColor: "#fff" }
                        }
                    ]
                }
            }
        });


        //vendor list
          //data table
        const dataTable = {
            table: null,
            filter: [],
            init: function() {
                dataTable.table = $("#data-table").DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: "/Selling/GetVendorData",
                        type: "POST",
                        data: function(d) {
                            d.filters = dataTable.filter;
                        }
                    },
                    columns:
                    [
                        { data: "VendorCompanyName" },
                        { data: "VendorPaid", "render": function(data) { return `৳${data}` } },
                        {
                            data: "VendorDue",
                            "render": function(data, type, row) {
                                return data?`<a href="/selling/DueCollectionMultiple/${row.VendorId}" class="blue-text">৳${data}</a>`:data
                            }
                        }
                    ],
                    columnDefs: [
                        { 'className': "text-right", "targets": [1,2] }
                    ]
                });
            },
            operand: {
                Equal: 0,
                NotEqual: 1,
                GreaterThan: 2,
                LessThan: 3,
                GreaterThanOrEqual: 4,
                LessThanOrEqual: 5,
                Contains: 6,
                StartsWith: 7,
                EndsWith: 8
            },
            getData: function() {
                dataTable.table ? dataTable.table.ajax.reload() : dataTable.init();
            }
        }
    </script>
}